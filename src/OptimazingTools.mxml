<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   minWidth="955" minHeight="600"
			   creationComplete="creationCompleteHandler()">
	<fx:Script>
		<![CDATA[
			import com.elad.optimize.framerate.FrameRateControl;
			import com.elad.optimize.memory.FrameStats;
			import com.gskinner.performance.*;
			
			import flash.sampler.getSize;
			
			import mx.controls.Text;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			
			import spark.components.Button;
			import spark.components.RichText;
			import spark.components.supportClasses.Skin;
			
			import tests.*;
			
			private var frameRateControl:FrameRateControl;
			private var frameStats:FrameStats;
			
			private var sprite:Sprite = new Sprite();
			
			protected function creationCompleteHandler():void
			{
				frameStats = new FrameStats(FlexGlobals.topLevelApplication, false );
				frameRateControl = new FrameRateControl( FlexGlobals.topLevelApplication, false, false, 1, 1);
				
				var componenent:UIComponent = new UIComponent();
				componenent.addChild( frameStats );
				frameStatsHolder.addElement( componenent );
				
				this.addEventListener(Event.ENTER_FRAME, onEnterFrame );
				
				uicom.addChild( sprite );
			}
			
			protected function button1_clickHandler():void
			{
/* 				trace( "Shape: " + getSize( new Shape() ) );
				trace( "Sprite: " + getSize( new Sprite() ) );
				trace( "MovieClip: " + getSize( new MovieClip() ) );
				trace( "UIComponent: " + getSize( new UIComponent() ) );
				trace( "Group: " + getSize( new Group() ) );
				trace( "Skin: " + getSize( new Skin() ) ); */
				//PerformanceTestDemo();
			}
			
			private var counter:int = 0;
			private function onEnterFrame(event:Event):void
			{
				if (++counter == 15)
				{
					frameStats.isDebugMode = true;
					trace("********* add to stage START *********");
					for (var i:int=0; i<1000; i++)
						this.addElement( new RichText() );				
				}
				
				if (counter == 16)
				{
					frameStats.isDebugMode = false;
					this.removeEventListener(Event.ENTER_FRAME, onEnterFrame );
					trace("********* add to stage END *********");					
				}
			}
			
		]]>
	</fx:Script>
	
	<s:Group id="frameStatsHolder" />
	<mx:UIComponent id="uicom" />
	
</s:Application>
